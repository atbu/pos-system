// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:password@localhost:5432/possystem"
  // obviously in a real situation, the password would be something more secure than 'password' but since this system is for development and won't ever be exposed to the internet it doesn't really matter
}

model Menu {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  title       String
  slug        String      @unique
  active      Boolean     @default(false)
  categories  Category[]
}

model Category {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  title       String
  desc        String
  slug        String      @unique
  products    Product[]
  menu        Menu        @relation(fields: [menuSlug], references: [slug])
  menuSlug    String
}

model Product {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  title       String
  desc        String
  price       Decimal
  options     Json[]
  category    Category    @relation(fields: [catSlug], references: [slug])
  catSlug     String
  stock       Int         @default(0) // amount of stock in inventory
  onOrder     Int         @default(0) // amount of stock that has been ordered and is awaiting delivery
}

model Order {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  subtotal    Decimal
  total       Decimal
  products    Json[]
  status      String      @default("New")
  discount    Decimal     @default(0)
  mop         String      // Method of payment
  user        User        @relation(fields: [userPin], references: [pin])
  userPin     String
  tips        Tip[]
}

model GiftCard {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  value       Decimal     @default(0)
  name        String
  message     String
  code        String      @default(uuid())
  active      Boolean     @default(true)
}

model User {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  pin         String      @unique // It is a string so leading zeros are not deleted
  fullName    String
  initials    String
  orders      Order[]
  tips        Tip[]
}

model Tip {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  amount      Decimal
  user        User        @relation(fields: [userPin], references: [pin])
  userPin     String
  order       Order       @relation(fields: [orderId], references: [id])
  orderId     Int
}